From
    convert matrix to sparse 
    x: (0 1.1 0; 2.1 0 3.1)
    (+:idx),,       /tuple of (row ; col; val)
    x ./:idx:       /get the value
    ,/              /flat
    (!#:x)(,/:)'    /add row index
    &:'~0=x         /column of non zero element at each row"]

fdd
    apply function f on 2 dictionaries
    x:(+); y:1 2!2 4; z:1 3!3 9 
    x[y k;]z k:        /apply binary function x on value of common keys
    .q.inter[!y;!z]    /find common key of dictionary y an z

ddv
    convert sparse matrix to (row; col!val) format
    x:(0 1 1;2 3 4; `a`b`c)
    (!'/)      /change to col!val
    x[1 2]@\:  /get col and val by row
    =:x 0      /group by row;

smm
    Multiply sparse matrix
    x:From x0:(1 0 0f;1 0 1f); y: From y0: (1 0 0 0f;0 0 2 1f;0 0 0 0f); r:x0$y0
    del0            /remove if value is 0
    unddv@          /from ddv to sparse matrix
    +/''            /sum vals
    ddv[x]dXd/:\:  /outer product * of dictionary
    ddv             /convert to dict->dict->val of row!col!val
    Trans y         /transpose sparse matrix y"];
